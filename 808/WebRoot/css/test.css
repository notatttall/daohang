body{
	display: block;
	margin: 0px;
}

#Container{
    width:100%;
    margin:0 auto;/*设置整个容器在浏览器中水平居中*/
    background:#CF3;
    padding-left:0 0 0 0;
}
#Header{
    height:80px;
    background:#2DA1EE;
}
#logo{
    padding-left:50px;
    padding-top: 26px;
    padding-bottom:50px;
}
#Content{
    height:520px;
    /*此处对容器设置了高度，一般不建议对容器设置高度，一般使用overflow:auto;属性设置容器根据内容自适应高度，如果不指定高度或不设置自适应高度，容器将默认为1个字符高度，容器下方的布局元素（footer）设置margin-top:属性将无效*/
    margin-top:0px;/*此处讲解margin的用法，设置content与上面header元素之间的距离*/
    background: #FCFCFC;
     
}
#Content-Left{
 	height:600px;
    width: 15%;
    margin: 0px;/*设置元素跟其他元素的距离为20像素*/
    float:left;/*设置浮动，实现多列效果，div+Css布局中很重要的*/
    background:#B0ECE5;
}
#map{
    height:460px;
    width: 85%;
    margin: 0 0 0 0;/*设置元素跟其他元素的距离为20像素*/
    float:left;/*设置浮动，实现多列效果，div+Css布局中很重要的*/
}

#Content-Table{
    height:140px;
    width: 85%;
    margin: 0 0 0 0;/*设置元素跟其他元素的距离为20像素*/
    float:right;
    background: #FFFFFF;
}


/*注：Content-Left和Content-Main元素是Content元素的子元素，两个元素使用了float:left;设置成两列，这个两个元素的宽度和这个两个元素设置的padding、margin的和一定不能大于父层Content元素的宽度，否则设置列将失败*/
#Footer{
    height:40px;
    background:#2DA1EE;
}
.Clear{
    clear:both;
}
.amap-maptype-label{
display: inline-block;
width: 24px;
height: 20px;
color: #333;
font-size: 12px;
line-height: 18px;
margin-left: 25px;
}